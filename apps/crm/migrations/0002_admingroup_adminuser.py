# Generated by Django 4.2.5 on 2023-09-09 18:58

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('crm', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('北海道', '北海道'), ('青森', '青森'), ('岩手', '岩手'), ('宮城', '宮城'), ('秋田', '秋田'), ('山形', '山形'), ('福島', '福島'), ('茨城', '茨城'), ('栃木', '栃木'), ('群馬', '群馬'), ('埼玉', '埼玉'), ('千葉', '千葉'), ('東京', '東京'), ('神奈川', '神奈川'), ('新潟', '新潟'), ('富山', '富山'), ('石川', '石川'), ('福井', '福井'), ('山梨', '山梨'), ('長野', '長野'), ('岐阜', '岐阜'), ('静岡', '静岡'), ('愛知', '愛知'), ('三重', '三重'), ('滋賀', '滋賀'), ('京都', '京都'), ('大阪', '大阪'), ('兵庫', '兵庫'), ('奈良', '奈良'), ('和歌山', '和歌山'), ('鳥取', '鳥取'), ('島根', '島根'), ('岡山', '岡山'), ('広島', '広島'), ('山口', '山口'), ('徳島', '徳島'), ('香川', '香川'), ('愛媛', '愛媛'), ('高知', '高知'), ('福岡', '福岡'), ('佐賀', '佐賀'), ('長崎', '長崎'), ('熊本', '熊本'), ('大分', '大分'), ('宮崎', '宮崎'), ('鹿児島', '鹿児島'), ('沖縄', '沖縄'), ('本部', '本部')], max_length=50, unique=True)),
                ('permission', models.CharField(choices=[('branch', 'Branch'), ('head', 'Head')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(to='crm.admingroup')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='adminuser_set', related_query_name='adminuser', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
